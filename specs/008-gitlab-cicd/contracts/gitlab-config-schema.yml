# GitLab Configuration Schema
# Purpose: Define the structure and validation rules for /etc/gitlab/gitlab.rb
# Version: 1.0.0
# Date: 2025-10-20
# Documentation: https://docs.gitlab.com/omnibus/settings/configuration.html

---
# Configuration File Metadata

file_path: /etc/gitlab/gitlab.rb
file_format: Ruby DSL
permissions: "0600"  # Root read/write only
owner: root
group: root
reload_command: "gitlab-ctl reconfigure"
validation_command: "gitlab-ctl show-config"

---
# Core Configuration Sections

external_url:
  description: "Public-facing URL for GitLab (HTTPS required)"
  type: string
  format: URL
  required: true
  example: "https://gitlab.infra.local"
  validation: "Must use HTTPS protocol"
  note: "Determines all generated URLs in GitLab UI"

---
# GitLab Rails Application Settings

gitlab_rails:
  description: "Main GitLab application configuration"
  type: hash

  # Time zone
  time_zone:
    type: string
    default: "UTC"
    example: "Europe/Stockholm"
    note: "Affects timestamps in UI and logs"

  # Email settings
  smtp_enable:
    type: boolean
    default: false
    example: true
    note: "Required for email notifications"

  smtp_address:
    type: string
    required_if: smtp_enable
    example: "smtp.example.com"

  smtp_port:
    type: integer
    default: 587
    range: [1, 65535]
    example: 587

  smtp_user_name:
    type: string
    required_if: smtp_enable
    security: "Store in Ansible Vault"

  smtp_password:
    type: string
    required_if: smtp_enable
    security: "MUST be stored in Ansible Vault"

  smtp_domain:
    type: string
    example: "infra.local"

  smtp_authentication:
    type: string
    enum: [login, plain, cram_md5]
    default: "login"

  smtp_enable_starttls_auto:
    type: boolean
    default: true

  gitlab_email_from:
    type: string
    format: email
    example: "gitlab@infra.local"

  gitlab_email_reply_to:
    type: string
    format: email
    example: "noreply@infra.local"

  # Database (PostgreSQL - bundled)
  db_adapter:
    type: string
    default: "postgresql"
    immutable: true
    note: "GitLab Omnibus uses bundled PostgreSQL"

  db_database:
    type: string
    default: "gitlabhq_production"

  # Redis (bundled)
  redis_socket:
    type: string
    default: "/var/opt/gitlab/redis/redis.socket"
    note: "Socket connection for performance"

  # Uploads and artifacts
  uploads_directory:
    type: string
    default: "/var/opt/gitlab/gitlab-rails/uploads"

  artifacts_enabled:
    type: boolean
    default: true

  artifacts_path:
    type: string
    default: "/var/opt/gitlab/gitlab-rails/shared/artifacts"

  artifacts_expire_in:
    type: string
    default: "30 days"
    example: "1 week"
    note: "Format: '7 days', '1 week', '1 month'"

  # LFS (Large File Storage)
  lfs_enabled:
    type: boolean
    default: true

  lfs_storage_path:
    type: string
    default: "/var/opt/gitlab/git-data/lfs-objects"

  # Container Registry
  registry_enabled:
    type: boolean
    default: false
    example: true
    note: "Enable Docker container registry"

  registry_host:
    type: string
    required_if: registry_enabled
    example: "registry.gitlab.infra.local"

  registry_port:
    type: integer
    default: 5000
    range: [1, 65535]

  registry_path:
    type: string
    default: "/var/opt/gitlab/gitlab-rails/shared/registry"

  # OmniAuth (OIDC/SSO)
  omniauth_enabled:
    type: boolean
    default: false
    example: true
    note: "Enable for Keycloak OIDC integration"

  omniauth_allow_single_sign_on:
    type: array
    example: ['openid_connect']
    note: "Providers that allow auto-account creation"

  omniauth_block_auto_created_users:
    type: boolean
    default: true
    example: false
    note: "false allows auto-provisioning from Keycloak"

  omniauth_auto_link_ldap_user:
    type: boolean
    default: false

  omniauth_providers:
    type: array
    description: "OIDC provider configurations"
    schema:
      - name:
          type: string
          example: "openid_connect"
      - label:
          type: string
          example: "Keycloak SSO"
      - args:
          type: hash
          required_keys: [name, scope, discovery, issuer, client_options]
          schema:
            name:
              type: string
              example: "openid_connect"
            scope:
              type: array
              example: ['openid', 'profile', 'email']
            discovery:
              type: boolean
              default: true
              note: "Auto-discover OIDC endpoints"
            issuer:
              type: string
              format: URL
              example: "https://keycloak.infra.local/realms/infrastructure"
            client_auth_method:
              type: string
              enum: [basic, jwks]
              default: "basic"
            client_options:
              type: hash
              schema:
                identifier:
                  type: string
                  example: "gitlab"
                  note: "Keycloak client ID"
                secret:
                  type: string
                  security: "MUST be stored in Ansible Vault"
                redirect_uri:
                  type: string
                  format: URL
                  example: "https://gitlab.infra.local/users/auth/openid_connect/callback"

---
# Nginx (Web Server)

nginx:
  description: "Built-in Nginx web server configuration"
  type: hash

  enable:
    type: boolean
    default: true
    note: "Nginx bundled with Omnibus"

  listen_port:
    type: integer
    default: 80
    range: [1, 65535]
    note: "Internal port, Traefik handles HTTPS"

  listen_https:
    type: boolean
    default: false
    note: "false when Traefik terminates TLS"

  redirect_http_to_https:
    type: boolean
    default: false
    note: "false when Traefik handles redirects"

  client_max_body_size:
    type: string
    default: "250m"
    example: "500m"
    note: "Max upload size (Git push, file upload)"

---
# Git Storage

git_data_dirs:
  description: "Git repository storage locations"
  type: hash
  default:
    default:
      path: "/var/opt/gitlab/git-data"
  schema:
    default:
      path:
        type: string
        note: "Primary repository storage"

---
# Sidekiq (Background Jobs)

sidekiq:
  description: "Background job processor configuration"
  type: hash

  max_concurrency:
    type: integer
    default: 50
    range: [1, 100]
    note: "Max concurrent background jobs"

---
# Unicorn/Puma (Application Server)

puma:
  description: "Puma web application server"
  type: hash

  worker_processes:
    type: integer
    default: 2
    note: "Number of Puma worker processes"

  worker_timeout:
    type: integer
    default: 60
    unit: seconds

---
# GitLab Shell (SSH)

gitlab_shell:
  description: "SSH access configuration"
  type: hash

  ssh_port:
    type: integer
    default: 22
    range: [1, 65535]
    note: "SSH port for Git operations"

---
# PostgreSQL (Database)

postgresql:
  description: "Bundled PostgreSQL database"
  type: hash

  enable:
    type: boolean
    default: true

  shared_buffers:
    type: string
    default: "256MB"
    example: "512MB"
    note: "Increase for better performance"

  max_connections:
    type: integer
    default: 200
    range: [100, 1000]

---
# Redis (Cache/Queue)

redis:
  description: "Bundled Redis cache server"
  type: hash

  enable:
    type: boolean
    default: true

  maxmemory:
    type: string
    default: "0"
    example: "512MB"
    note: "0 = unlimited (use all available)"

---
# Monitoring

prometheus_monitoring:
  description: "Prometheus metrics exporter"
  type: hash

  enable:
    type: boolean
    default: true
    note: "Exposes metrics for Zabbix scraping"

---
# Backup

gitlab_rails_backup_path:
  description: "Backup storage location"
  type: string
  default: "/var/opt/gitlab/backups"

gitlab_rails_backup_keep_time:
  description: "Backup retention period"
  type: integer
  default: 604800
  unit: seconds
  note: "604800 = 7 days"

---
# Security

gitlab_rails_initial_root_password:
  description: "Initial root password"
  type: string
  required: true
  security: "MUST be stored in Ansible Vault"
  note: "Set only on first install"

---
# Example Configuration Template

example_config: |
  # External URL (REQUIRED)
  external_url 'https://gitlab.infra.local'

  # Nginx (behind Traefik)
  nginx['listen_port'] = 80
  nginx['listen_https'] = false
  nginx['redirect_http_to_https'] = false
  nginx['client_max_body_size'] = '250m'

  # Email notifications
  gitlab_rails['smtp_enable'] = true
  gitlab_rails['smtp_address'] = 'smtp.infra.local'
  gitlab_rails['smtp_port'] = 587
  gitlab_rails['smtp_user_name'] = 'gitlab@infra.local'
  gitlab_rails['smtp_password'] = '{{ vault_gitlab_smtp_password }}'
  gitlab_rails['smtp_domain'] = 'infra.local'
  gitlab_rails['smtp_authentication'] = 'login'
  gitlab_rails['smtp_enable_starttls_auto'] = true
  gitlab_rails['gitlab_email_from'] = 'gitlab@infra.local'

  # Keycloak OIDC Integration
  gitlab_rails['omniauth_enabled'] = true
  gitlab_rails['omniauth_allow_single_sign_on'] = ['openid_connect']
  gitlab_rails['omniauth_block_auto_created_users'] = false
  gitlab_rails['omniauth_providers'] = [
    {
      'name' => 'openid_connect',
      'label' => 'Keycloak SSO',
      'args' => {
        'name' => 'openid_connect',
        'scope' => ['openid', 'profile', 'email'],
        'discovery' => true,
        'issuer' => 'https://keycloak.infra.local/realms/infrastructure',
        'client_auth_method' => 'basic',
        'client_options' => {
          'identifier' => 'gitlab',
          'secret' => '{{ vault_keycloak_gitlab_client_secret }}',
          'redirect_uri' => 'https://gitlab.infra.local/users/auth/openid_connect/callback'
        }
      }
    }
  ]

  # Container Registry
  registry_external_url 'https://registry.gitlab.infra.local'
  gitlab_rails['registry_enabled'] = true
  registry['enable'] = true
  registry['registry_http_addr'] = "0.0.0.0:5000"

  # Artifacts and LFS
  gitlab_rails['artifacts_enabled'] = true
  gitlab_rails['artifacts_expire_in'] = '30 days'
  gitlab_rails['lfs_enabled'] = true

  # Performance tuning
  postgresql['shared_buffers'] = "512MB"
  puma['worker_processes'] = 4
  sidekiq['max_concurrency'] = 50

  # Monitoring
  prometheus_monitoring['enable'] = true

  # Backup
  gitlab_rails['backup_keep_time'] = 604800  # 7 days

---
# Ansible Template Mapping

template_file: roles/gitlab/templates/gitlab.rb.j2

template_variables:
  - external_url: "{{ gitlab_external_url }}"
  - gitlab_smtp_password: "{{ vault_gitlab_smtp_password }}"
  - keycloak_gitlab_client_secret: "{{ vault_keycloak_gitlab_client_secret }}"
  - gitlab_initial_root_password: "{{ vault_gitlab_root_password }}"

---
# Configuration Management

deployment_method: Ansible template
deployment_file: roles/gitlab/tasks/configure.yml
reload_method: "gitlab-ctl reconfigure"
reload_description: "Applies configuration changes and restarts affected services"

status_command: "gitlab-ctl status"
status_description: "Shows status of all GitLab services"

validation_command: "gitlab-ctl show-config"
validation_description: "Displays compiled configuration"

---
# Security Considerations

security_checklist:
  - name: "Root password encryption"
    requirement: "Root password encrypted in Ansible Vault"
    validation: "grep -r 'gitlab_root_password' group_vars/ should find no plaintext"

  - name: "OIDC client secret encryption"
    requirement: "Keycloak client secret encrypted in Ansible Vault"
    validation: "No plaintext secrets in gitlab.rb template"

  - name: "HTTPS enforcement"
    requirement: "external_url must use https://"
    validation: "external_url starts with https://"

  - name: "File permissions"
    requirement: "gitlab.rb must be 0600 (root only)"
    validation: "stat -c '%a' /etc/gitlab/gitlab.rb returns 600"

---
# Troubleshooting

common_errors:
  - error: "502 Bad Gateway"
    cause: "Puma/Unicorn not started or crashed"
    solution: "Check 'gitlab-ctl status', restart with 'gitlab-ctl restart puma'"

  - error: "OIDC authentication fails"
    cause: "Invalid issuer URL or client secret"
    solution: "Verify Keycloak realm URL and client secret in Vault"

  - error: "Email notifications not sending"
    cause: "SMTP credentials incorrect or SMTP disabled"
    solution: "Test with 'gitlab-rails console', send test email"

  - error: "Reconfigure fails with permission error"
    cause: "gitlab.rb not owned by root"
    solution: "chown root:root /etc/gitlab/gitlab.rb && chmod 0600"

---
# References

- Official GitLab configuration: https://docs.gitlab.com/omnibus/settings/configuration.html
- OIDC integration: https://docs.gitlab.com/ee/administration/auth/oidc.html
- Container registry: https://docs.gitlab.com/ee/administration/packages/container_registry.html
- Backup and restore: https://docs.gitlab.com/ee/raketasks/backup_restore.html
