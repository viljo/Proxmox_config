{% set coolify_env_combined = coolify_env_defaults | combine(coolify_env_extra, recursive=True) %}
version: '3.9'

services:
  postgres:
    image: {{ coolify_postgres_image }}
    restart: unless-stopped
    environment:
      POSTGRES_DB: {{ coolify_postgres_db | to_json }}
      POSTGRES_USER: {{ coolify_postgres_user | to_json }}
      POSTGRES_PASSWORD: {{ coolify_postgres_password | to_json }}
    volumes:
      - coolify_postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{ coolify_postgres_user }} -d {{ coolify_postgres_db }}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: {{ coolify_redis_image }}
    restart: unless-stopped
    command:
      - redis-server
      - --requirepass
      - {{ coolify_redis_password }}
    volumes:
      - coolify_redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  soketi:
    image: {{ coolify_soketi_image }}
    restart: unless-stopped
    environment:
      SOKETI_DEFAULT_APP_ID: {{ coolify_pusher_app_id | to_json }}
      SOKETI_DEFAULT_APP_KEY: {{ coolify_pusher_app_key | to_json }}
      SOKETI_DEFAULT_APP_SECRET: {{ coolify_pusher_app_secret | to_json }}
      SOKETI_USER_AUTHENTICATION_TIMEOUT: "30000"
    ports:
      - "6001:6001"
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 6001 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  coolify:
    image: {{ coolify_image }}
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      soketi:
        condition: service_healthy
    environment:
{% for key, value in coolify_env_combined | dictsort %}
      {{ key }}: {{ value | to_json }}
{% endfor %}
    ports:
      - "{{ coolify_service_port }}:{{ coolify_internal_port }}"
    volumes:
      - coolify_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
      - /data/coolify/source:/data/coolify/source
      - /data/coolify/ssh:/data/coolify/ssh
      - /data/coolify/applications:/data/coolify/applications
      - /data/coolify/databases:/data/coolify/databases
      - /data/coolify/backups:/data/coolify/backups
      - /data/coolify/services:/data/coolify/services
      - /data/coolify/proxy:/data/coolify/proxy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:{{ coolify_internal_port }}/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

volumes:
  coolify_postgres:
  coolify_redis:
  coolify_data:
