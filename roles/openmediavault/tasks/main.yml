---
- name: Ensure OMV template cache directory exists
  ansible.builtin.file:
    path: "{{ omv_template_file | dirname }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Download template for OMV container
  ansible.builtin.get_url:
    url: "{{ omv_template_url }}"
    dest: "{{ omv_template_file }}"
    mode: "0644"
    force: false
  when: not ansible_check_mode

- name: Compose OMV container network configuration
  ansible.builtin.set_fact:
    omv_net0: >-
      name=eth0,bridge={{ omv_bridge }}{% if omv_vlan_tag %},tag={{ omv_vlan_tag }}{% endif %},ip={{ omv_ip_config }}{% if omv_gateway is defined and omv_gateway %},gw={{ omv_gateway }}{% endif %}

- name: Ensure OMV container exists
  ansible.builtin.shell: |
    pct create {{ omv_container_id }} {{ omv_template_file }} \
      --hostname {{ omv_hostname }} \
      --cores {{ omv_cores }} \
      --memory {{ omv_memory }} \
      --swap {{ omv_swap }} \
      --rootfs {{ omv_rootfs_storage }}:{{ omv_disk }} \
      --net0 {{ omv_net0 }} \
      {% if omv_unprivileged %}--unprivileged 1{% endif %}
  args:
    creates: "/etc/pve/lxc/{{ omv_container_id }}.conf"
  when: not ansible_check_mode

- name: Stat OMV container configuration
  ansible.builtin.stat:
    path: "/etc/pve/lxc/{{ omv_container_id }}.conf"
  register: omv_container_conf

- name: Ensure OMV container onboot flag is set
  ansible.builtin.lineinfile:
    path: "/etc/pve/lxc/{{ omv_container_id }}.conf"
    regexp: '^onboot:'
    line: "onboot: {{ 1 if omv_start_onboot else 0 }}"
    insertafter: EOF
  when: omv_container_conf.stat.exists

- name: Ensure OMV container features list is present
  ansible.builtin.lineinfile:
    path: "/etc/pve/lxc/{{ omv_container_id }}.conf"
    regexp: '^features:'
    line: "features: {{ omv_features | dictsort | map('join', '=') | join(';') }}"
    insertafter: EOF
  when: omv_container_conf.stat.exists and omv_features | length > 0

- name: Ensure OMV container DNS servers are set
  ansible.builtin.lineinfile:
    path: "/etc/pve/lxc/{{ omv_container_id }}.conf"
    regexp: '^nameserver:'
    line: "nameserver: {{ omv_dns_servers | join(' ') }}"
    insertafter: EOF
  when: omv_container_conf.stat.exists and omv_dns_servers is defined and omv_dns_servers | length > 0

- name: Read OMV container status
  ansible.builtin.command:
    cmd: pct status {{ omv_container_id }}
  register: omv_status
  changed_when: false
  failed_when: omv_status.rc not in [0, 2]
  when: omv_container_conf.stat.exists

- name: Start OMV container
  ansible.builtin.command:
    cmd: pct start {{ omv_container_id }}
  when:
    - not ansible_check_mode
    - omv_container_conf.stat.exists
    - omv_status.rc is defined
    - (omv_status.rc != 0 or ('stopped' in omv_status.stdout | default('')))

- name: Wait for OMV container to boot
  ansible.builtin.command:
    cmd: pct exec {{ omv_container_id }} -- bash -lc "true"
  register: omv_boot_probe
  failed_when: false
  changed_when: false
  retries: 10
  delay: 3
  until: omv_boot_probe.rc == 0
  when:
    - not ansible_check_mode
    - omv_container_conf.stat.exists

- name: Ensure OMV root password is set
  ansible.builtin.command:
    cmd: >
      pct exec {{ omv_container_id }} -- bash -lc "echo 'root:{{ omv_root_password }}' | chpasswd"
  no_log: true
  when:
    - not ansible_check_mode
    - omv_container_conf.stat.exists
    - omv_root_password is defined
    - omv_root_password | length > 0

- name: Check OMV provisioning marker
  ansible.builtin.command:
    cmd: >
      pct exec {{ omv_container_id }} -- bash -lc "test -f /etc/openmediavault/.provisioned"
  register: omv_provision_marker
  changed_when: false
  failed_when: false
  when: omv_container_conf.stat.exists

- name: Install OMV prerequisites
  ansible.builtin.command:
    cmd: >
      pct exec {{ omv_container_id }} -- bash -lc "apt-get update && apt-get install -y wget gnupg lsb-release sudo"
  when:
    - not ansible_check_mode
    - omv_container_conf.stat.exists
    - omv_provision_marker.rc is defined
    - omv_provision_marker.rc != 0

- name: Install OpenMediaVault via official script
  ansible.builtin.command:
    cmd: >
      pct exec {{ omv_container_id }} -- bash -lc "wget -O - https://github.com/OpenMediaVault-Plugin-Developers/installScript/raw/master/install | sudo bash"
  when:
    - not ansible_check_mode
    - omv_container_conf.stat.exists
    - omv_provision_marker.rc is defined
    - omv_provision_marker.rc != 0

- name: Run omv-confdbadm populate
  ansible.builtin.command:
    cmd: >
      pct exec {{ omv_container_id }} -- bash -lc "omv-confdbadm populate"
  when:
    - not ansible_check_mode
    - omv_container_conf.stat.exists
    - omv_provision_marker.rc is defined
    - omv_provision_marker.rc != 0

- name: Install OMV-Extras plugin repository
  ansible.builtin.command:
    cmd: >
      pct exec {{ omv_container_id }} -- bash -lc "wget -O - https://github.com/OpenMediaVault-Plugin-Developers/packages/raw/master/install | bash"
  when:
    - not ansible_check_mode
    - omv_container_conf.stat.exists
    - omv_provision_marker.rc is defined
    - omv_provision_marker.rc != 0
    - omv_install_extras

- name: Set OMV web admin password
  ansible.builtin.command:
    cmd: >
      pct exec {{ omv_container_id }} -- bash -lc "omv-firstaid <<EOF
      1
      {{ omv_admin_password }}
      {{ omv_admin_password }}
      EOF"
  no_log: true
  when:
    - not ansible_check_mode
    - omv_container_conf.stat.exists
    - omv_provision_marker.rc is defined
    - omv_provision_marker.rc != 0
    - omv_admin_password is defined
    - omv_admin_password | length > 0

- name: Ensure OMV services are enabled and started
  ansible.builtin.command:
    cmd: >
      pct exec {{ omv_container_id }} -- bash -lc "systemctl enable --now openmediavault-engined"
  when:
    - not ansible_check_mode
    - omv_container_conf.stat.exists
    - omv_provision_marker.rc is defined
    - omv_provision_marker.rc != 0

- name: Apply OMV configuration changes
  ansible.builtin.command:
    cmd: >
      pct exec {{ omv_container_id }} -- bash -lc "omv-salt deploy run"
  when:
    - not ansible_check_mode
    - omv_container_conf.stat.exists
    - omv_provision_marker.rc is defined
    - omv_provision_marker.rc != 0

- name: Touch OMV provisioning marker
  ansible.builtin.command:
    cmd: >
      pct exec {{ omv_container_id }} -- bash -lc "mkdir -p /etc/openmediavault && touch /etc/openmediavault/.provisioned"
  when:
    - not ansible_check_mode
    - omv_container_conf.stat.exists
    - omv_provision_marker.rc is defined
    - omv_provision_marker.rc != 0
