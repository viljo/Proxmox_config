#!/usr/sbin/nft -f

flush ruleset

table inet filter {
  chain input {
    type filter hook input priority 0;
    policy drop;

    iifname "lo" accept
    ct state { established, related } accept

    iifname "{{ firewall_lan_interface }}" accept

    {% if firewall_allow_management_ports %}
    tcp dport { {{ firewall_allow_management_ports | join(', ') }} } accept
    {% endif %}

    counter drop
  }

  chain forward {
    type filter hook forward priority 0;
    policy drop;

    ct state { established, related } accept

    iifname "{{ firewall_lan_interface }}" oifname "{{ firewall_wan_interface }}" accept

    {% for service in firewall_forward_services %}
    {% set ports = service.ports | join(', ') %}
    {% if service.proto == 'tcp' %}
    iifname "{{ firewall_wan_interface }}" oifname "{{ firewall_lan_interface }}" tcp dport { {{ ports }} } accept
    {% elif service.proto == 'udp' %}
    iifname "{{ firewall_wan_interface }}" oifname "{{ firewall_lan_interface }}" udp dport { {{ ports }} } accept
    {% endif %}
    {% endfor %}

    counter drop
  }

  chain output {
    type filter hook output priority 0;
    policy accept;
  }
}

table ip nat {
  chain prerouting {
    type nat hook prerouting priority -100;
    policy accept;
    {% for service in firewall_forward_services %}
    {% set ports = service.ports | join(', ') %}
    {% if service.proto == 'tcp' %}
    iifname "{{ firewall_wan_interface }}" tcp dport { {{ ports }} } dnat to {{ service.target }}
    {% elif service.proto == 'udp' %}
    iifname "{{ firewall_wan_interface }}" udp dport { {{ ports }} } dnat to {{ service.target }}
    {% endif %}
    {% endfor %}
  }

  chain postrouting {
    type nat hook postrouting priority 100;
    policy accept;
    # Masquerade outbound traffic from DMZ to WAN
    ip saddr {{ dmz_subnet }} oifname "{{ firewall_wan_interface }}" masquerade
    # CRITICAL: SNAT traffic from WAN to DMZ so replies route back through firewall
    # Without this, replies from DMZ services exit via Proxmox host's default route (vmbr0/Starlink)
    iifname "{{ firewall_wan_interface }}" oifname "{{ firewall_lan_interface }}" masquerade
  }
}
