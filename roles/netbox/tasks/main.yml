---
- name: Ensure NetBox template cache directory exists
  ansible.builtin.file:
    path: "{{ netbox_template_file | dirname }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Download template for NetBox container
  ansible.builtin.get_url:
    url: "{{ netbox_template_url }}"
    dest: "{{ netbox_template_file }}"
    mode: "0644"
    force: false
  when: not ansible_check_mode

- name: Compose NetBox container network configuration
  ansible.builtin.set_fact:
    netbox_net0: >-
      name=eth0,bridge={{ netbox_bridge }}{% if netbox_vlan_tag %},tag={{ netbox_vlan_tag }}{% endif %},ip={{ netbox_ip_config }}{% if netbox_gateway is defined and netbox_gateway %},gw={{ netbox_gateway }}{% endif %}

- name: Ensure NetBox container exists
  ansible.builtin.shell: |
    pct create {{ netbox_container_id }} {{ netbox_template_file }} \
      --hostname {{ netbox_hostname }} \
      --cores {{ netbox_cores }} \
      --memory {{ netbox_memory }} \
      --swap {{ netbox_swap }} \
      --rootfs {{ netbox_rootfs_storage }}:{{ netbox_disk }} \
      --net0 {{ netbox_net0 }} \
      {% if netbox_unprivileged %}--unprivileged 1{% endif %}
  args:
    creates: "/etc/pve/lxc/{{ netbox_container_id }}.conf"
  when: not ansible_check_mode

- name: Stat NetBox container configuration
  ansible.builtin.stat:
    path: "/etc/pve/lxc/{{ netbox_container_id }}.conf"
  register: netbox_container_conf

- name: Ensure NetBox container network configuration
  ansible.builtin.command:
    cmd: >
      pct set {{ netbox_container_id }} --net0 {{ netbox_net0 }}
  when: not ansible_check_mode and netbox_container_conf.stat.exists

- name: Ensure NetBox container onboot flag is set
  ansible.builtin.lineinfile:
    path: "/etc/pve/lxc/{{ netbox_container_id }}.conf"
    regexp: '^onboot:'
    line: "onboot: {{ 1 if netbox_start_onboot else 0 }}"
    insertafter: EOF
  when: netbox_container_conf.stat.exists

- name: Ensure NetBox container features list is present
  ansible.builtin.lineinfile:
    path: "/etc/pve/lxc/{{ netbox_container_id }}.conf"
    regexp: '^features:'
    line: "features: {{ netbox_features | dictsort | map('join', '=') | join(';') }}"
    insertafter: EOF
  when: netbox_container_conf.stat.exists and netbox_features | length > 0

- name: Ensure NetBox container DNS servers are set
  ansible.builtin.lineinfile:
    path: "/etc/pve/lxc/{{ netbox_container_id }}.conf"
    regexp: '^nameserver:'
    line: "nameserver: {{ netbox_dns_servers | join(' ') }}"
    insertafter: EOF
  when: netbox_container_conf.stat.exists and netbox_dns_servers is defined and netbox_dns_servers | length > 0

- name: Read NetBox container status
  ansible.builtin.command:
    cmd: pct status {{ netbox_container_id }}
  register: netbox_status
  changed_when: false
  failed_when: netbox_status.rc not in [0, 2]
  when: netbox_container_conf.stat.exists

- name: Start NetBox container
  ansible.builtin.command:
    cmd: pct start {{ netbox_container_id }}
  when:
    - not ansible_check_mode
    - netbox_container_conf.stat.exists
    - netbox_status.rc is defined
    - (netbox_status.rc != 0 or ('stopped' in netbox_status.stdout | default('')))

- name: Wait for NetBox container to boot
  ansible.builtin.command:
    cmd: pct exec {{ netbox_container_id }} -- bash -lc "true"
  register: netbox_boot_probe
  failed_when: false
  changed_when: false
  retries: 15
  delay: 3
  until: netbox_boot_probe.rc == 0
  when:
    - not ansible_check_mode
    - netbox_container_conf.stat.exists

- name: Ensure NetBox root password is set
  ansible.builtin.command:
    cmd: >
      pct exec {{ netbox_container_id }} -- bash -lc "echo 'root:{{ netbox_root_password }}' | chpasswd"
  no_log: true
  when:
    - not ansible_check_mode
    - netbox_container_conf.stat.exists
    - netbox_root_password is defined
    - netbox_root_password | length > 0

- name: Check NetBox provisioning marker
  ansible.builtin.command:
    cmd: >
      pct exec {{ netbox_container_id }} -- bash -lc "test -f /etc/netbox/.provisioned"
  register: netbox_provision_marker
  changed_when: false
  failed_when: false
  when: netbox_container_conf.stat.exists

- name: Install Docker stack for NetBox
  ansible.builtin.command:
    cmd: >
      pct exec {{ netbox_container_id }} -- bash -lc "apt-get update && apt-get install -y docker.io docker-compose-plugin git"
  when:
    - not ansible_check_mode
    - netbox_container_conf.stat.exists
    - netbox_provision_marker.rc is defined
    - netbox_provision_marker.rc != 0

- name: Ensure NetBox compose directory exists on host
  ansible.builtin.file:
    path: "{{ netbox_rootfs_path }}{{ netbox_compose_path }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Render NetBox docker compose file
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ netbox_rootfs_path }}{{ netbox_compose_path }}/docker-compose.yml"
    owner: root
    group: root
    mode: "0644"
  notify: restart netbox stack

- name: Touch NetBox provisioning marker
  ansible.builtin.command:
    cmd: >
      pct exec {{ netbox_container_id }} -- bash -lc "mkdir -p /etc/netbox && touch /etc/netbox/.provisioned"
  when:
    - not ansible_check_mode
    - netbox_container_conf.stat.exists
    - netbox_provision_marker.rc is defined
    - netbox_provision_marker.rc != 0
