---
# SSH Bastion (Jump Host) deployment via Proxmox API

- name: Create bastion container via Proxmox API
  community.proxmox.proxmox:
    api_host: "{{ proxmox_api_host }}"
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_token_id }}"
    api_token_secret: "{{ proxmox_api_token_secret }}"
    validate_certs: "{{ proxmox_api_validate_certs }}"
    node: "{{ proxmox_node }}"
    vmid: "{{ bastion_container_id }}"
    hostname: "{{ bastion_hostname }}"
    ostemplate: "local:vztmpl/{{ bastion_template_file }}"
    cores: "{{ bastion_cores }}"
    memory: "{{ bastion_memory }}"
    swap: "{{ bastion_swap }}"
    disk: "{{ bastion_rootfs_storage }}:{{ bastion_disk }}"
    netif:
      net0: "name=eth0,bridge={{ bastion_bridge }},ip={{ bastion_ip_address }}/{{ bastion_netmask }},gw={{ bastion_gateway }},type=veth"
    nameserver: "{{ bastion_dns_servers | join(' ') }}"
    unprivileged: "{{ bastion_unprivileged }}"
    onboot: true
    password: "{{ bastion_root_password }}"
    pubkey: "{{ bastion_authorized_keys | join('\n') }}"
    state: present
  register: bastion_container

- name: Start bastion container via Proxmox API
  community.proxmox.proxmox:
    api_host: "{{ proxmox_api_host }}"
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_token_id }}"
    api_token_secret: "{{ proxmox_api_token_secret }}"
    validate_certs: "{{ proxmox_api_validate_certs }}"
    node: "{{ proxmox_node }}"
    vmid: "{{ bastion_container_id }}"
    state: started

- name: Wait for bastion container SSH to be available
  ansible.builtin.wait_for:
    host: "{{ bastion_ip_address }}"
    port: 22
    delay: 5
    timeout: 60
  delegate_to: "{{ inventory_hostname }}"

- name: Add bastion to in-memory inventory for delegation
  ansible.builtin.add_host:
    name: bastion_container
    ansible_host: "{{ bastion_ip_address }}"
    ansible_user: root
    ansible_password: "{{ bastion_root_password }}"
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
    groups: containers

- name: Install required system packages
  ansible.builtin.apt:
    name:
      - openssh-server
      - fail2ban
      - ufw
      - locales
    state: present
    update_cache: yes
  delegate_to: bastion_container

- name: Generate en_US.UTF-8 locale
  ansible.builtin.command:
    cmd: locale-gen en_US.UTF-8
  delegate_to: bastion_container
  changed_when: false

- name: Set system locale
  ansible.builtin.copy:
    content: |
      LANG=en_US.UTF-8
      LC_ALL=en_US.UTF-8
    dest: /etc/default/locale
  delegate_to: bastion_container

- name: Deploy SSH server configuration
  ansible.builtin.template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: '0644'
  delegate_to: bastion_container
  notify: Restart sshd

- name: Deploy fail2ban jail configuration
  ansible.builtin.template:
    src: jail.local.j2
    dest: /etc/fail2ban/jail.local
    owner: root
    group: root
    mode: '0644'
  delegate_to: bastion_container
  notify: Restart fail2ban
  when: bastion_fail2ban_enabled

- name: Enable and start fail2ban service
  ansible.builtin.systemd:
    name: fail2ban
    enabled: yes
    state: started
  delegate_to: bastion_container
  when: bastion_fail2ban_enabled

- name: Configure UFW to allow SSH
  ansible.builtin.command:
    cmd: ufw allow {{ bastion_ssh_port }}/tcp
  delegate_to: bastion_container
  changed_when: false

- name: Enable UFW firewall
  ansible.builtin.command:
    cmd: ufw --force enable
  delegate_to: bastion_container
  changed_when: false

- name: Ensure SSH service is enabled and running
  ansible.builtin.systemd:
    name: sshd
    enabled: yes
    state: started
  delegate_to: bastion_container

- name: Test SSH connectivity
  ansible.builtin.command:
    cmd: "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null root@{{ bastion_ip_address }} 'echo Bastion SSH test successful'"
  delegate_to: "{{ inventory_hostname }}"
  changed_when: false
  register: bastion_ssh_test

- name: Display bastion configuration
  ansible.builtin.debug:
    msg:
      - "SSH Bastion deployed successfully"
      - "  Container ID: {{ bastion_container_id }}"
      - "  IP: {{ bastion_ip_address }}"
      - "  SSH Port: {{ bastion_ssh_port }}"
      - "  External: ssh.{{ bastion_external_domain }} (via firewall DNAT)"
      - "  Usage: ssh -J root@ssh.{{ bastion_external_domain }} root@<target_ip>"
      - "  Fail2ban: {{ 'enabled' if bastion_fail2ban_enabled else 'disabled' }}"
