---
- name: Ensure WireGuard template cache directory exists
  ansible.builtin.file:
    path: "{{ wireguard_template_file | dirname }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Download template for WireGuard container
  ansible.builtin.get_url:
    url: "{{ wireguard_template_url }}"
    dest: "{{ wireguard_template_file }}"
    mode: "0644"
    force: false
  when: not ansible_check_mode

- name: Compose WireGuard container network configuration
  ansible.builtin.set_fact:
    wireguard_net0: >-
      name=eth0,bridge={{ wireguard_bridge }}{% if wireguard_vlan_tag %},tag={{ wireguard_vlan_tag }}{% endif %},ip={{ wireguard_ip_config }}{% if wireguard_gateway is defined and wireguard_gateway %},gw={{ wireguard_gateway }}{% endif %}

- name: Ensure WireGuard container exists
  ansible.builtin.shell: |
    pct create {{ wireguard_container_id }} {{ wireguard_template_file }} \
      --hostname {{ wireguard_hostname }} \
      --cores {{ wireguard_cores }} \
      --memory {{ wireguard_memory }} \
      --swap {{ wireguard_swap }} \
      --rootfs {{ wireguard_rootfs_storage }}:{{ wireguard_disk }} \
      --net0 {{ wireguard_net0 }} \
      {% if wireguard_unprivileged %}--unprivileged 1{% endif %}
  args:
    creates: "/etc/pve/lxc/{{ wireguard_container_id }}.conf"
  when: not ansible_check_mode

- name: Stat WireGuard container configuration
  ansible.builtin.stat:
    path: "/etc/pve/lxc/{{ wireguard_container_id }}.conf"
  register: wireguard_container_conf

- name: Ensure WireGuard container onboot flag is set
  ansible.builtin.lineinfile:
    path: "/etc/pve/lxc/{{ wireguard_container_id }}.conf"
    regexp: '^onboot:'
    line: "onboot: {{ 1 if wireguard_start_onboot else 0 }}"
    insertafter: EOF
  when: wireguard_container_conf.stat.exists

- name: Read WireGuard container status
  ansible.builtin.command:
    cmd: pct status {{ wireguard_container_id }}
  register: wireguard_status
  changed_when: false
  failed_when: wireguard_status.rc not in [0, 2]
  when: wireguard_container_conf.stat.exists

- name: Start WireGuard container
  ansible.builtin.command:
    cmd: pct start {{ wireguard_container_id }}
  when:
    - not ansible_check_mode
    - wireguard_container_conf.stat.exists
    - wireguard_status.rc is defined
    - (wireguard_status.rc != 0 or ('stopped' in wireguard_status.stdout | default('')))

- name: Wait for WireGuard container to boot
  ansible.builtin.command:
    cmd: pct exec {{ wireguard_container_id }} -- bash -lc "true"
  register: wireguard_boot_probe
  failed_when: false
  changed_when: false
  retries: 10
  delay: 3
  until: wireguard_boot_probe.rc == 0
  when:
    - not ansible_check_mode
    - wireguard_container_conf.stat.exists

- name: Ensure WireGuard root password is set
  ansible.builtin.command:
    cmd: >
      pct exec {{ wireguard_container_id }} -- bash -lc "echo 'root:{{ wireguard_root_password }}' | chpasswd"
  no_log: true
  when:
    - not ansible_check_mode
    - wireguard_container_conf.stat.exists
    - wireguard_root_password is defined
    - wireguard_root_password | length > 0

- name: Check WireGuard provisioning marker
  ansible.builtin.command:
    cmd: >
      pct exec {{ wireguard_container_id }} -- bash -lc "test -f /etc/wireguard/.provisioned"
  register: wireguard_provision_marker
  changed_when: false
  failed_when: false
  when: wireguard_container_conf.stat.exists

- name: Install WireGuard packages
  ansible.builtin.command:
    cmd: >
      pct exec {{ wireguard_container_id }} -- bash -lc "apt-get update && apt-get install -y wireguard qrencode"
  when:
    - not ansible_check_mode
    - wireguard_container_conf.stat.exists
    - wireguard_provision_marker.rc is defined
    - wireguard_provision_marker.rc != 0

- name: Ensure WireGuard config directory exists
  ansible.builtin.file:
    path: "{{ wireguard_rootfs_path }}{{ wireguard_config_dir }}"
    state: directory
    owner: root
    group: root
    mode: "0700"

- name: Deploy WireGuard configuration
  ansible.builtin.template:
    src: wg0.conf.j2
    dest: "{{ wireguard_rootfs_path }}{{ wireguard_config_dir }}/{{ wireguard_interface }}.conf"
    owner: root
    group: root
    mode: "0600"
  notify: restart wireguard

- name: Enable WireGuard service
  ansible.builtin.command:
    cmd: >
      pct exec {{ wireguard_container_id }} -- systemctl enable wg-quick@{{ wireguard_interface }}
  when: not ansible_check_mode and wireguard_container_conf.stat.exists

- name: Ensure WireGuard service is running
  ansible.builtin.command:
    cmd: >
      pct exec {{ wireguard_container_id }} -- systemctl start wg-quick@{{ wireguard_interface }}
  when: not ansible_check_mode and wireguard_container_conf.stat.exists

- name: Touch WireGuard provisioning marker
  ansible.builtin.command:
    cmd: >
      pct exec {{ wireguard_container_id }} -- bash -lc "mkdir -p /etc/wireguard && touch /etc/wireguard/.provisioned"
  when:
    - not ansible_check_mode
    - wireguard_container_conf.stat.exists
    - wireguard_provision_marker.rc is defined
    - wireguard_provision_marker.rc != 0
