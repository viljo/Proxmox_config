---
# Deploy Zabbix agent to a single container
- name: Check if Zabbix agent is installed on {{ container.name }}
  ansible.builtin.command:
    cmd: >
      pct exec {{ container.id }} -- bash -lc "dpkg -l | grep zabbix-agent"
  register: agent_check
  changed_when: false
  failed_when: false

- name: Install Zabbix repository on {{ container.name }}
  ansible.builtin.command:
    cmd: >
      pct exec {{ container.id }} -- bash -lc "wget -O /tmp/zabbix-release.deb https://repo.zabbix.com/zabbix/{{ zabbix_version_major }}.{{ zabbix_version_minor }}/debian/pool/main/z/zabbix-release/zabbix-release_latest+debian13_all.deb && dpkg -i /tmp/zabbix-release.deb && apt-get update"
  when:
    - not ansible_check_mode
    - agent_check.rc != 0

- name: Install Zabbix agent on {{ container.name }}
  ansible.builtin.command:
    cmd: >
      pct exec {{ container.id }} -- bash -lc "apt-get install -y zabbix-agent"
  when:
    - not ansible_check_mode
    - agent_check.rc != 0

- name: Configure Zabbix agent on {{ container.name }}
  ansible.builtin.template:
    src: zabbix_agentd.conf.j2
    dest: "/var/lib/lxc/{{ container.id }}/rootfs/etc/zabbix/zabbix_agentd.conf"
    owner: root
    group: root
    mode: "0644"
  vars:
    agent_hostname: "{{ container.name }}"
    agent_server: "{{ zabbix_ip_address }}"
    agent_server_active: "{{ zabbix_ip_address }}"

- name: Ensure Zabbix agent is enabled on {{ container.name }}
  ansible.builtin.command:
    cmd: >
      pct exec {{ container.id }} -- systemctl enable zabbix-agent
  when: not ansible_check_mode

- name: Restart Zabbix agent on {{ container.name }}
  ansible.builtin.command:
    cmd: >
      pct exec {{ container.id }} -- systemctl restart zabbix-agent
  when: not ansible_check_mode
