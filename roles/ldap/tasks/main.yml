- name: Update apt cache for LDAP packages
  ansible.builtin.apt:
    update_cache: true
  when: ldap_package_update_cache

- name: Install LDAP preseed utilities
  ansible.builtin.apt:
    name: "{{ ldap_preseed_packages }}"
    state: present
  when: ldap_preseed_packages | length > 0

- name: Preseed slapd configuration
  ansible.builtin.debconf:
    name: slapd
    question: "{{ item.question }}"
    value: "{{ item.value }}"
    vtype: "{{ item.vtype }}"
  loop:
    - question: slapd/no_configuration
      value: "false"
      vtype: boolean
    - question: slapd/domain
      value: "{{ ldap_domain }}"
      vtype: string
    - question: shared/organization
      value: "{{ ldap_organization }}"
      vtype: string
    - question: slapd/backend
      value: "{{ ldap_config_backend | upper }}"
      vtype: select
    - question: slapd/purge_database
      value: "true"
      vtype: boolean
    - question: slapd/move_old_database
      value: "true"
      vtype: boolean
    - question: slapd/root_password
      value: "{{ ldap_admin_password }}"
      vtype: password
    - question: slapd/root_password_again
      value: "{{ ldap_admin_password }}"
      vtype: password

- name: Install LDAP server packages
  ansible.builtin.apt:
    name: "{{ ldap_server_packages }}"
    state: present

- name: Ensure slapd service is running
  ansible.builtin.systemd:
    name: "{{ ldap_service_name }}"
    state: started
    enabled: true
  when: not ansible_check_mode

- name: Render LDAP base structure LDIF
  ansible.builtin.template:
    src: base.ldif.j2
    dest: /tmp/ldap-base.ldif
    owner: root
    group: root
    mode: "0600"

- name: Check if LDAP base suffix exists
  ansible.builtin.command:
    cmd: ldapsearch -LLL -Y EXTERNAL -H ldapi:/// -b "{{ ldap_suffix }}" dn
  register: ldap_base_lookup
  changed_when: false
  failed_when: ldap_base_lookup.rc not in [0, 32]
  when: not ansible_check_mode

- name: Seed LDAP base suffix
  ansible.builtin.command:
    cmd: ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/ldap-base.ldif
  when:
    - not ansible_check_mode
    - ldap_base_lookup.rc == 32
  notify: restart ldap

- name: Remove temporary LDAP base LDIF
  ansible.builtin.file:
    path: /tmp/ldap-base.ldif
    state: absent

- name: Render LDIF to disable anonymous bind
  ansible.builtin.template:
    src: disable-anon.ldif.j2
    dest: /tmp/ldap-disable-anon.ldif
    owner: root
    group: root
    mode: "0600"
  when: not ldap_allow_anon_bind

- name: Check if bind_anon is already disallowed
  ansible.builtin.command:
    cmd: ldapsearch -LLL -Y EXTERNAL -H ldapi:/// -b cn=config "(olcDisallows=bind_anon)" dn
  register: ldap_bind_anon_search
  changed_when: false
  failed_when: ldap_bind_anon_search.rc not in [0, 32]
  when:
    - not ansible_check_mode
    - not ldap_allow_anon_bind

- name: Disable anonymous bind
  ansible.builtin.command:
    cmd: ldapmodify -Y EXTERNAL -H ldapi:/// -f /tmp/ldap-disable-anon.ldif
  when:
    - not ansible_check_mode
    - not ldap_allow_anon_bind
    - ldap_bind_anon_search.stdout == ""
  notify: restart ldap

- name: Remove temporary LDAP anonymous bind LDIF
  ansible.builtin.file:
    path: /tmp/ldap-disable-anon.ldif
    state: absent
  when: not ldap_allow_anon_bind

- name: Gather currently loaded slapd modules
  ansible.builtin.command:
    cmd: ldapsearch -LLL -Y EXTERNAL -H ldapi:/// -b "{{ ldap_module_dn }}" olcModuleLoad
  register: ldap_module_query
  changed_when: false
  failed_when: ldap_module_query.rc not in [0, 32]
  when:
    - not ansible_check_mode
    - ldap_enable_memberof

- name: Derive loaded module list
  ansible.builtin.set_fact:
    ldap_existing_modules: "{{ ldap_module_query.stdout_lines
      | select('match', '^olcModuleLoad:')
      | map('regex_replace', '^olcModuleLoad:\\s*(?:\\{\\d+\\})?', '')
      | map('trim')
      | list }}"
  when:
    - not ansible_check_mode
    - ldap_enable_memberof

- name: Determine missing memberOf modules
  ansible.builtin.set_fact:
    ldap_missing_modules: "{{ ldap_memberof_required_modules | difference(ldap_existing_modules | default([])) }}"
  when:
    - not ansible_check_mode
    - ldap_enable_memberof

- name: Render memberOf module LDIF
  ansible.builtin.template:
    src: memberof-module.ldif.j2
    dest: /tmp/ldap-memberof-module.ldif
    owner: root
    group: root
    mode: "0600"
  when:
    - not ansible_check_mode
    - ldap_enable_memberof
    - (ldap_missing_modules | default([])) | length > 0

- name: Ensure required modules are loaded
  ansible.builtin.command:
    cmd: ldapmodify -Y EXTERNAL -H ldapi:/// -f /tmp/ldap-memberof-module.ldif
  when:
    - not ansible_check_mode
    - ldap_enable_memberof
    - (ldap_missing_modules | default([])) | length > 0
  notify: restart ldap

- name: Remove temporary module LDIF
  ansible.builtin.file:
    path: /tmp/ldap-memberof-module.ldif
    state: absent
  when:
    - not ansible_check_mode
    - ldap_enable_memberof
    - (ldap_missing_modules | default([])) | length > 0

- name: Check if memberOf overlay exists
  ansible.builtin.command:
    cmd: ldapsearch -LLL -Y EXTERNAL -H ldapi:/// -b "{{ ldap_database_dn }}" "(olcOverlay=memberof)" dn
  register: ldap_memberof_lookup
  changed_when: false
  failed_when: ldap_memberof_lookup.rc not in [0, 32]
  when:
    - not ansible_check_mode
    - ldap_enable_memberof

- name: Render memberOf overlay LDIF
  ansible.builtin.template:
    src: memberof-overlay.ldif.j2
    dest: /tmp/ldap-memberof-overlay.ldif
    owner: root
    group: root
    mode: "0600"
  when:
    - not ansible_check_mode
    - ldap_enable_memberof
    - ldap_memberof_lookup.stdout == ""

- name: Render refint overlay LDIF
  ansible.builtin.template:
    src: refint-overlay.ldif.j2
    dest: /tmp/ldap-refint-overlay.ldif
    owner: root
    group: root
    mode: "0600"
  when:
    - not ansible_check_mode
    - ldap_enable_memberof
    - ldap_memberof_lookup.stdout == ""

- name: Ensure memberOf overlay is configured
  ansible.builtin.command:
    cmd: ldapmodify -Y EXTERNAL -H ldapi:/// -f /tmp/ldap-memberof-overlay.ldif
  when:
    - not ansible_check_mode
    - ldap_enable_memberof
    - ldap_memberof_lookup.stdout == ""
  notify: restart ldap

- name: Ensure refint overlay is configured
  ansible.builtin.command:
    cmd: ldapmodify -Y EXTERNAL -H ldapi:/// -f /tmp/ldap-refint-overlay.ldif
  when:
    - not ansible_check_mode
    - ldap_enable_memberof
    - ldap_memberof_lookup.stdout == ""
  notify: restart ldap

- name: Remove temporary overlay LDIFs
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /tmp/ldap-memberof-overlay.ldif
    - /tmp/ldap-refint-overlay.ldif
  when:
    - not ansible_check_mode
    - ldap_enable_memberof
    - ldap_memberof_lookup is defined

- name: Initialize LDAP group list
  ansible.builtin.set_fact:
    ldap_combined_groups: "{{ (ldap_default_groups | default(['users'])) | unique | list }}"

- name: Accumulate LDAP groups from user definitions
  ansible.builtin.set_fact:
    ldap_combined_groups: "{{ ldap_combined_groups | union(item.groups | default([])) | union(ldap_default_user_groups | default(['users'])) }}"
  loop: "{{ ldap_users | default([]) }}"
  loop_control:
    label: "{{ item.uid | default('user') }}"

- name: Ensure LDAP groups exist
  ansible.builtin.include_tasks: manage-group.yml
  loop: "{{ ldap_combined_groups | default([]) }}"
  loop_control:
    loop_var: ldap_group
  when: (ldap_combined_groups | default([])) | length > 0

- name: Ensure LDAP directory users exist
  ansible.builtin.include_tasks: manage-user.yml
  loop: "{{ ldap_users | default([]) }}"
  loop_control:
    loop_var: ldap_user
  when: (ldap_users | default([])) | length > 0

- name: Render TLS configuration LDIF
  ansible.builtin.template:
    src: tls.ldif.j2
    dest: /tmp/ldap-tls.ldif
    owner: root
    group: root
    mode: "0600"
  when: ldap_use_starttls

- name: Configure TLS settings
  ansible.builtin.command:
    cmd: ldapmodify -Y EXTERNAL -H ldapi:/// -f /tmp/ldap-tls.ldif
  when:
    - not ansible_check_mode
    - ldap_use_starttls
  notify: restart ldap

- name: Remove temporary TLS LDIF
  ansible.builtin.file:
    path: /tmp/ldap-tls.ldif
    state: absent
  when: ldap_use_starttls
